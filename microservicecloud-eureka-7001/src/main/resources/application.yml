server:
  port: 7001

eureka:
#===========自我保护模式
# 一般不建议关闭自我保护模式，因为可能因为网络堵塞等原因（服务可用）而误删了服务注册信息，使得程序不可用
# 满足了AP（高可用，容错性）
# 在自我保护模式中，Eureka Server会保护服务注册表中的信息，不再注销任何服务实例。
# 当它收到的心跳数重新恢复到阈值以上时，该Eureka Server节点就会自动退出自我保护模式。
# 它的设计哲学就是宁可保留错误的服务注册信息，也不盲目注销任何可能健康的服务实例。
# 一句话讲解：好死不如赖活着 
#  server:  
#    enable-self-preservation: false #禁用自我保护模式。
#==========
  instance:
    #hostname: localhost #eureka服务端的实例名称
    hostname: eureka7001.com #eureka服务端的实例名称。因为部署eureka服务集群，所以需要使用对应的域名来区分，localhost不适合
    #搭建eureka集群需要配置host文件，进行域名映射
    #找到C:\Windows\System32\drivers\etc路径下的hosts文件
    #127.0.0.1  eureka7001.com
    #127.0.0.1  eureka7002.com
    #127.0.0.1  eureka7003.com
  client:
    register-with-eureka: false #false表示不向注册中心注册自己。
    fetch-registry: false #false表示自己端就是注册中心，我的职责就是维护服务实例，并不需要去检索服务
    service-url:
      #defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka
      #eureka服务集群-->该eureka服务注册到另外的其他eureka中，无需注册到自己的服务中
      defaultZone: http://eureka7002.com:7002/eureka,http://eureka7003.com:7003/eureka
      #设置与Eureka Server交互的地址查询服务和注册服务都需要依赖这个地址。 这儿使用了变量取值
# 1、关掉热部署
# 2、手动重启一下这个热部署的微服务,在下一次热部署(自动重启)前不会出现重复注册的问题了 
spring:
  devtools:
    restart:
      enabled: false

     